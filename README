Ptrace-based sandbox, Proof-of-concept for ejudge and not only
==============================================================

Contents
========

* newdetect, program similar to strace, but not too pretty (because it is not final goal).

Demos to test on
================

* aplusb, read two numbers from file, write sum to other, c++.
* return-minus-1-c, return -1, c.
* return-1-cpp, return +1, c++.
* return-0-noglibc, return 0, no system calls performed, asm.
* hello, Guess what, c.
* hello32, Same, but uses 32 bit ABI.
* malloc, just eats a large bite of memory, c.
* million-of-mmaps, guess what it does, c.

Requirements
============

* Linux kernel and gnu libc, recent enough.
* procfs enabled in kernel.
* At the moment only x86_64 architecture supported.

How to reportbug
================

Please include in your report:

* Linux kernel version
* Gnu libc version
* Your architecture (example: x86_64, x86, Sparc, ...)
* strace and newdetect logs on demo programs (aplusb, return-0-noglibc, return-minus-1-c will be enough).

Building
========

Use "./build all" from project root.
You may also want try "./build --help"

For deeper building explanations see doc/building.txt
